---
import Card from "../ui/Card.astro";
import type { WordPressPost } from "../../types/wordpress";
import type { Language } from "../../utils/i18n";
import { translations } from "../../utils/i18n";
import { wordpressClient } from "../../utils/wordpressClient";

export interface Props {
  posts: WordPressPost[];
  lang: Language;
  showHeader?: boolean;
  showYearHeaders?: boolean;
  groupByDate?: boolean;
  layout?: 'card' | 'list';
}

const {
  posts,
  lang,
  showHeader = true,
  showYearHeaders = true,
  groupByDate = true,
  layout = 'card'
} = Astro.props;

const t = translations[lang];

// Agrupar posts por fecha si es necesario
const groupedPosts = groupByDate
  ? wordpressClient.groupPostsByDate(posts)
  : { "all": { "all": posts } };

// Formatear fecha
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString(lang, {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
};

// Formatear mes y año
const formatMonthYear = (year: string, month: string) => {
  return new Date(Number(year), Number(month) - 1).toLocaleDateString(lang, {
    month: 'long',
    year: 'numeric'
  });
};
---

<div class="max-w-4xl mx-auto space-y-8">
  <!-- Header -->
  {showHeader && (
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-light text-onSurface mb-4 font-mono">
        {t.home}
      </h1>
      <p class="text-xl text-onSurfaceVariant/80 max-w-2xl mx-auto font-sans">
        {lang === 'es'
          ? 'Descubre la colección de poemas organizada por tiempo y emoción'
          : 'Discover the poetry collection organized by time and emotion'}
      </p>
    </div>
  )}

  <!-- Estado vacío -->
  {posts.length === 0 && (
    <Card elevated={true} class="text-center brutal-shadow">
      <div class="py-20 px-6">
        <span class="icon-[streamline-sharp--feather-pen] text-5xl text-primary/60 mb-6 mx-auto"></span>
        <h2 class="text-2xl text-onSurface mb-3 font-mono">
          {lang === 'es' ? 'Silencio poético' : 'Poetic silence'}
        </h2>
        <p class="text-lg text-onSurfaceVariant/70 mb-4 font-sans">
          {lang === 'es'
            ? 'Aún no hay poemas para mostrar.'
            : 'No poems to display yet.'}
        </p>
        <span class="icon-[streamline-sharp--layout-window-25-solid] text-2xl text-outline/50"></span>
      </div>
    </Card>
  )}

  <!-- Lista de posts -->
  {Object.entries(groupedPosts)
    .sort(([a], [b]) => Number(b) - Number(a))
    .map(([year, months]) => (
      <section class="space-y-8">
        <!-- Encabezado de año -->
        {showYearHeaders && (
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t-3 border-outline/30"></div>
            </div>
            <div class="relative flex justify-center">
              <span class="bg-surface px-4 text-2xl font-medium text-onSurface font-mono">
                {year}
              </span>
            </div>
          </div>
        )}

        <!-- Lista de meses o posts -->
        <div class="space-y-6">
          {Object.entries(months)
            .sort(([a], [b]) => Number(b) - Number(a))
            .map(([month, monthPosts]) => (
              <div class="space-y-4">
                <!-- Header del mes -->
                {groupByDate && (
                  <div class="flex items-center gap-4 mb-2">
                    <div class="w-2 h-2 bg-primary rounded-full"></div>
                    <h3 class="text-xl font-medium text-onSurface font-mono">
                      {formatMonthYear(year, month)}
                    </h3>
                    <span class="text-sm text-onSurfaceVariant/60 font-mono">
                      {monthPosts.length} {lang === 'es' ? 'poemas' : 'poems'}
                    </span>
                  </div>
                )}

                <!-- Lista de posts -->
                <div class={layout === 'card' ? 'grid gap-4 md:grid-cols-2' : 'space-y-4'}>
                  {monthPosts.map((post) => {
                    const hasTranslation = post.translations && post.translations.length > 0;
                    const firstTranslation = hasTranslation ? post.translations![0] : null;
                    const translationLang = firstTranslation 
                      ? (firstTranslation.language.code.toLowerCase() as Language)
                      : null;

                    return (
                      <Card 
                        elevated={layout === 'card'} 
                        outlined={layout !== 'card'}
                        class={layout === 'card' ? 'h-full brutal-shadow brutal-shadow-hover' : 'brutal-border'}
                      >
                        <article class={layout === 'card' ? 'p-6 h-full flex flex-col' : 'p-4'}>
                          <!-- Título -->
                          <a
                            href={`/${lang}/${post.slug}/`}
                            class="group block mb-3"
                          >
                            <h3 class={`font-semibold text-onSurface group-hover:text-onPrimary font-mono ${
                              layout === 'card' ? 'text-xl mb-2' : 'text-lg'
                            }`}>
                              {post.title}
                            </h3>
                          </a>

                          <!-- Metadata -->
                          <div class="flex items-center gap-3 text-sm text-onSurfaceVariant/70 mb-3 font-mono">
                            <time datetime={post.date}>
                              {formatDate(post.date)}
                            </time>
                            
                            {/* {post.author && (
                              <>
                                <span class="w-1 h-1 bg-outline/50 rounded-full"></span>
                                <span>{post.author.node.name}</span>
                              </>
                            )} */}
                          </div>

                          <!-- Extracto -->
                          {post.excerpt && (
                            <p class={`text-onSurfaceVariant mb-4 font-sans ${
                              layout === 'card' ? 'text-base line-clamp-3' : 'text-sm line-clamp-2'
                            }`}>
                              {post.excerpt
                                .replace(/<[^>]*>/g, '')
                                .replace(/&nbsp;/g, ' ')
                                .replace(/&amp;/g, '&')
                                .slice(0, layout === 'card' ? 150 : 100)}
                              ...
                            </p>
                          )}

                          <!-- Footer -->
                          <div class="mt-auto flex items-center justify-between gap-3">
                            <!-- Tags -->
                            <div class="flex flex-wrap gap-1">
                              {post.categories?.nodes.slice(0, 2).map((category: any) => (
                                <span class="px-2 py-1 bg-secondaryContainer text-onSecondaryContainer text-xs rounded-sm brutal-border font-mono">
                                  {category.name}
                                </span>
                              ))}
                              
                              {hasTranslation && (
                                <span class="px-2 py-1 bg-primary/10 text-primary text-xs rounded-sm brutal-border flex items-center gap-1 font-mono">
                                  {translationLang === 'es' ? 'ES' : 'EN'}
                                </span>
                              )}
                            </div>

                            <!-- Acciones -->
                            <div class="flex items-center gap-2">
                              {hasTranslation && firstTranslation && (
                                <a
                                  href={`/${translationLang}/${firstTranslation.slug}/`}
                                  class="text-secondary hover:text-secondary-dark transition-colors text-xs flex items-center gap-1 font-mono"
                                  title={
                                    lang === 'es'
                                      ? `Versión en ${translationLang === 'es' ? 'español' : 'inglés'}`
                                      : `${translationLang === 'es' ? 'Spanish' : 'English'} version`
                                  }
                                >
                                  <span class="icon-[streamline-sharp--translate-text-remix] text-[0.7rem]"></span>
                                </a>
                              )}
                              <a
                                href={`/${lang}/${post.slug}/`}
                                class="text-primary hover:text-primary-dark transition-colors text-sm flex items-center gap-1 group/read font-mono"
                              >
                                <span class="group-hover/read:underline">
                                  {lang === 'es' ? 'Leer' : 'Read'}
                                </span>
                                <span class="icon-[streamline-sharp--line-arrow-right-1-remix] text-xs transform group-hover/read:translate-x-0.5"></span>
                              </a>
                            </div>
                          </div>
                        </article>
                      </Card>
                    );
                  })}
                </div>
              </div>
            ))}
        </div>
      </section>
    ))}
</div>

