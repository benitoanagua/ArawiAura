---
import Card from "../ui/Card.astro";
import type { WordPressPost } from "../../types/wordpress";
import type { Language } from "../../utils/i18n";
import { translations } from "../../utils/i18n";
import { wordpressClient } from "../../utils/wordpressClient";

export interface Props {
  posts: WordPressPost[];
  lang: Language;
  showHeader?: boolean;
  showYearHeaders?: boolean;
  groupByDate?: boolean;
  layout?: "card" | "list";
}

const {
  posts,
  lang,
  showHeader = true,
  showYearHeaders = true,
  groupByDate = true,
  layout = "card",
} = Astro.props;

const t = translations[lang];

const groupedPosts = groupByDate
  ? wordpressClient.groupPostsByDate(posts)
  : { all: { all: posts } };

const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString(lang, {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
};

const formatMonthYear = (year: string, month: string) => {
  return new Date(Number(year), Number(month) - 1).toLocaleDateString(lang, {
    month: "long",
    year: "numeric",
  });
};
---

<div class="max-w-4xl mx-auto space-y-12 font-sans">
  {
    showHeader && (
      <div class="text-center mb-12">
        <h1 class="font-mono font-black text-4xl md:text-5xl text-onSurface mb-4 border-b-4 border-primary inline-block">
          {t.home}
        </h1>
        <p class="text-lg text-onSurfaceVariant max-w-2xl mx-auto font-sans">
          {lang === "es"
            ? "Descubre la colección de poemas organizada por tiempo y emoción"
            : "Discover the poetry collection organized by time and emotion"}
        </p>
      </div>
    )
  }

  {
    posts.length === 0 && (
      <Card brutal class="text-center">
        <div class="py-20 px-6">
          <div class="i-ph-feather-duotone text-6xl text-primary mb-6 mx-auto" />
          <h2 class="text-2xl font-mono font-bold text-onSurface mb-3">
            {lang === "es" ? "Silencio poético" : "Poetic silence"}
          </h2>
          <p class="text-onSurfaceVariant mb-4">
            {lang === "es"
              ? "Aún no hay poemas para mostrar."
              : "No poems to display yet."}
          </p>
          <div class="i-ph-wind-duotone text-2xl text-outlineVariant" />
        </div>
      </Card>
    )
  }

  {
    Object.entries(groupedPosts)
      .sort(([a], [b]) => Number(b) - Number(a))
      .map(([year, months]) => (
        <section class="space-y-8">
          {showYearHeaders && (
            <div class="relative">
              <div class="absolute inset-0 flex items-center">
                <div class="w-full border-t-2 border-outline" />
              </div>
              <div class="relative flex justify-center">
                <span class="bg-surface px-4 text-2xl font-mono font-black text-onSurface border-2 border-outline">
                  {year}
                </span>
              </div>
            </div>
          )}

          <div class="space-y-6">
            {Object.entries(months)
              .sort(([a], [b]) => Number(b) - Number(a))
              .map(([month, monthPosts]) => (
                <div class="space-y-4">
                  {groupByDate && (
                    <div class="flex items-center gap-4 mb-2">
                      <span class="w-3 h-3 bg-primary border-2 border-primary" />
                      <h3 class="text-xl font-mono font-bold text-onSurface">
                        {formatMonthYear(year, month)}
                      </h3>
                      <span class="text-sm text-onSurfaceVariant font-mono">
                        {monthPosts.length} {lang === "es" ? "poemas" : "poems"}
                      </span>
                    </div>
                  )}

                  <div
                    class={
                      layout === "card"
                        ? "grid gap-6 md:grid-cols-2"
                        : "space-y-4"
                    }
                  >
                    {monthPosts.map((post) => {
                      const hasTranslation =
                        post.translations && post.translations.length > 0;
                      const firstTranslation = hasTranslation
                        ? post.translations![0]
                        : null;
                      const translationLang = firstTranslation
                        ? (firstTranslation.language.code.toLowerCase() as Language)
                        : null;

                      return (
                        <Card brutal class="h-full">
                          <article class="p-6 h-full flex flex-col">
                            <a
                              href={`/${lang}/${post.slug}/`}
                              class="group block mb-3"
                            >
                              <h3 class="font-mono font-bold text-onSurface text-lg border-b-2 border-primary group-hover:bg-primary group-hover:text-onPrimary">
                                {post.title}
                              </h3>
                            </a>

                            <div class="flex items-center gap-3 text-sm text-onSurfaceVariant font-mono mb-3">
                              <time datetime={post.date}>
                                {formatDate(post.date)}
                              </time>
                              {post.author && (
                                <>
                                  <span class="w-1 h-1 bg-outline" />
                                  <span>{post.author.node.name}</span>
                                </>
                              )}
                            </div>

                            {post.excerpt && (
                              <p class="text-onSurfaceVariant mb-4 font-sans text-sm line-clamp-3">
                                {post.excerpt
                                  .replace(/<[^>]*>/g, "")
                                  .replace(/&nbsp;/g, " ")
                                  .replace(/&amp;/g, "&")
                                  .slice(0, 120)}
                                ...
                              </p>
                            )}

                            <div class="mt-auto flex items-center justify-between gap-3">
                              <div class="flex flex-wrap gap-2">
                                {post.categories?.nodes
                                  .slice(0, 2)
                                  .map((category: any) => (
                                    <span class="px-2 py-1 bg-secondaryContainer text-onSecondaryContainer text-xs font-mono uppercase border-2 border-secondary">
                                      {category.name}
                                    </span>
                                  ))}
                                {hasTranslation && (
                                  <span class="px-2 py-1 bg-primary/10 text-primary text-xs font-mono uppercase border-2 border-primary">
                                    {translationLang === "es" ? "ES" : "EN"}
                                  </span>
                                )}
                              </div>

                              <div class="flex items-center gap-2">
                                {hasTranslation && firstTranslation && (
                                  <a
                                    href={`/${translationLang}/${firstTranslation.slug}/`}
                                    class="text-secondary hover:text-secondary-dark text-xs font-mono uppercase border-b-2 border-secondary"
                                    title={
                                      lang === "es"
                                        ? `Versión en ${translationLang === "es" ? "español" : "inglés"}`
                                        : `${translationLang === "es" ? "Spanish" : "English"} version`
                                    }
                                  >
                                    TR
                                  </a>
                                )}
                                <a
                                  href={`/${lang}/${post.slug}/`}
                                  class="text-primary hover:text-primary-dark text-sm font-mono uppercase border-b-2 border-primary"
                                >
                                  {lang === "es" ? "Leer" : "Read"}
                                </a>
                              </div>
                            </div>
                          </article>
                        </Card>
                      );
                    })}
                  </div>
                </div>
              ))}
          </div>
        </section>
      ))
  }
</div>
