---
import { getCollection } from "astro:content";
import MainLayout from "../layouts/MainLayout.astro";
import Card from "../components/ui/Card.astro";
import type { Language } from "../utils/i18n";
import { translations } from "../utils/i18n";

export async function getStaticPaths() {
  const poems = await getCollection("poems", (p) => !p.data.draft);

  return poems.map((poem) => ({
    params: {
      slug: poem.slug,
    },
    props: { poem },
  }));
}

const { slug } = Astro.params;
const { poem } = Astro.props;

if (!poem) {
  throw new Error(`Poem not found for slug: ${slug}`);
}

const { Content } = await poem.render();
const langFromSlug = poem.slug.split("/")[0] as Language;
const t = translations[langFromSlug];
---

<MainLayout lang={langFromSlug} title={poem.data.title}>
  <Card elevated class="max-w-3xl mx-auto">
    <article class="prose mx-auto">
      <h1 class="text-3xl font-bold text-onSurface">{poem.data.title}</h1>
      <time
        datetime={poem.data.date.toISOString()}
        class="text-onSurfaceVariant block mb-6"
      >
        {
          poem.data.date.toLocaleDateString(poem.data.lang, {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </time>

      <Content />

      {
        poem.data.translation && (
          <footer class="mt-12 pt-6 border-t border-outlineVariant">
            <p class="text-onSurfaceVariant">
              {t.alsoAvailable}{" "}
              <a
                href={`/${poem.data.translation}/`}
                class="text-primary hover:text-primary/80 transition-colors"
              >
                {t.readTranslation}
              </a>
            </p>
          </footer>
        )
      }
    </article>
  </Card>
</MainLayout>
