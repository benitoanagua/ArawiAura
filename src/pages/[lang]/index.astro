---
import MainLayout from "../../layouts/MainLayout.astro";
import Card from "../../components/ui/Card.astro";
import { getCollection } from "astro:content";
import type { Language } from "../../utils/i18n";
import { translations } from "../../utils/i18n";

export async function getStaticPaths() {
  const langs = ["es", "en"] as const;

  return await Promise.all(
    langs.map(async (lang) => {
      const poems = await getCollection(
        "poems",
        (p) => p.slug.startsWith(lang + "/") && !p.data.draft
      );

      const grouped = poems.reduce<
        Record<string, Record<string, typeof poems>>
      >((acc, poem) => {
        const parts = poem.slug.split("/");
        if (parts.length >= 3) {
          const year = parts[1];
          const month = parts[2];
          acc[year] ||= {};
          acc[year][month] ||= [];
          acc[year][month].push(poem);
        }
        return acc;
      }, {});

      return {
        params: { lang },
        props: { lang, grouped },
      };
    })
  );
}

const { lang: urlLang, grouped } = Astro.props;
const lang: Language = urlLang === "es" || urlLang === "en" ? urlLang : "en";
const t = translations[lang];

// Metadatos SEO para la página principal
const pageTitle = t.home;
const pageDescription =
  lang === "es"
    ? "Explora el diario de poesía Arawi Aura. Poemas en español e inglés organizados por año y mes."
    : "Explore the Arawi Aura poetry journal. Poems in English and Spanish organized by year and month.";
---

<MainLayout
  title={pageTitle}
  description={pageDescription}
  {lang}
  canonicalPath={`/${lang}/`}
>
  <div class="space-y-8">
    {
      Object.entries(grouped)
        .sort(([a], [b]) => Number(b) - Number(a))
        .map(([year, months]) => (
          <Card elevated>
            <h2 class="text-2xl font-semibold text-onSurface mb-6">{year}</h2>
            {Object.entries(months)
              .sort(([a], [b]) => Number(b) - Number(a))
              .map(([month, poems]) => (
                <div class="mb-6 last:mb-0">
                  <h3 class="text-xl font-medium text-onSurfaceVariant mb-4">
                    {new Date(
                      Number(year),
                      Number(month) - 1
                    ).toLocaleDateString(lang, {
                      month: "long",
                      year: "numeric",
                    })}
                  </h3>
                  <ul class="space-y-4">
                    {poems.map((p) => (
                      <li class="border-l-2 border-outlineVariant pl-4 py-2">
                        <a
                          href={`/${p.slug}/`}
                          class="text-xl font-semibold text-primary hover:text-primary/80 transition-colors"
                        >
                          {p.data.title}
                        </a>
                        <br />
                        <small class="text-onSurfaceVariant">
                          {p.data.date.toLocaleDateString(lang, {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          })}
                        </small>
                        {p.data.translation && (
                          <small class="ml-2">
                            {" · "}
                            <a
                              href={`/${p.data.translation}/`}
                              class="text-secondary hover:text-secondary/80 transition-colors"
                            >
                              {lang === "es" ? "en inglés" : "in Spanish"}
                            </a>
                          </small>
                        )}
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
          </Card>
        ))
    }
  </div>
</MainLayout>
