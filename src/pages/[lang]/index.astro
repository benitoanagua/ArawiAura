---
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const langs = ["es", "en"] as const;

  return await Promise.all(
    langs.map(async (lang) => {
      const poems = await getCollection(
        "poems",
        (p) => p.data.lang === lang && !p.data.draft
      );

      // Agrupamos por año y mes directamente aquí
      const grouped = poems.reduce<
        Record<string, Record<string, typeof poems>>
      >((acc, poem) => {
        const year = poem.data.date.getFullYear().toString();
        const month = (poem.data.date.getMonth() + 1)
          .toString()
          .padStart(2, "0");
        acc[year] ||= {};
        acc[year][month] ||= [];
        acc[year][month].push(poem);
        return acc;
      }, {});

      return {
        params: { lang },
        props: { lang, grouped },
      };
    })
  );
}

const { lang, grouped } = Astro.props;
---

<DefaultLayout {lang}>
  <div class="prose mx-auto">
    {
      Object.entries(grouped)
        .sort(([a], [b]) => Number(b) - Number(a))
        .map(([year, months]) => (
          <section>
            <h2>{year}</h2>
            {Object.entries(months)
              .sort(([a], [b]) => Number(b) - Number(a))
              .map(([month, poems]) => (
                <div>
                  <h3>
                    {new Date(
                      Number(year),
                      Number(month) - 1
                    ).toLocaleDateString(lang, { month: "long" })}
                  </h3>
                  <ul class="space-y-4">
                    {poems.map((p) => (
                      <li class="border-l-2 pl-4">
                        <a href={`/${p.slug}/`} class="text-xl font-semibold">
                          {p.data.title}
                        </a>
                        <br />
                        <small class="text-gray-500">
                          {p.data.date.toLocaleDateString(lang)}
                        </small>
                        {p.data.translation && (
                          <small class="ml-2">
                            {" · "}
                            <a href={`/${p.data.translation}/`}>
                              {lang === "es" ? "en inglés" : "in Spanish"}
                            </a>
                          </small>
                        )}
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
          </section>
        ))
    }
  </div>
</DefaultLayout>
